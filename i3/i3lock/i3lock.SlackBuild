#!/bin/sh
# Heavily based on the Slackware 14.2 SlackBuild
#
# Created by: mid-kid <esteve.varela@gmail.com>
#
#
# 
# 
# Modified by: Skin Mox <skin-mox@bol.com.br>
#  
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
#
#
# Official Site: http://i3wm.org/i3lock//
#

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=i3lock
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-2.8}
ARCH=${ARCH:-$(uname -m)}
JOBS=${JOBS:--j5}
BUILD=${BUILD:-1}
TAG=${TAG:-sm}
SUFFIX=${SUFFIX:-tar.bz2}

SOURCE="http://i3wm.org/$PKGNAME/$PKGNAME-$VERSION.$SUFFIX"

TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

if [ ! -e $CWD/$TAR ]; then
    echo -e "[\033[01;32m  Download source tarball  \033[01;37m] "
    echo ""
    echo ""
    sleep 2
fi

# Download source tarball if still not present
if [ ! -e $CWD/$TAR ]; then
   wget -c $SOURCE -O "$CWD/$TAR" || exit 1
fi

FILE=$SOURCE
if [ -e "$FILE" ] ; then
   echo -e "[\033[01;31m  Tarball not found  \033[01;37m]"
   exit 1
fi

# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; 
  SLKLDFLAGS="-L/usr/lib64"; 
  LIBDIRSUFFIX="64"; 
  CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT 

echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
echo -e "[\033[01;32m  Decompress the source tarball  \033[01;37m] "
echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
sleep 2

# Decompress the source tarball
cd $TMP
tar xvf $CWD/$TAR || exit 1
cd $DIR || exit 1

# Apply a patch that removes all the PAM-related code,
#   and checks the password against shadow instead.
patch -p1 < $CWD/patches/i3lock-2.8-no-pam.patch --verbose || exit 1

echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
echo -e "[\033[01;32m  Building  package  \033[01;37m] "
echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
sleep 2

# Building  package
export LDFLAGS="$SLKLDFLAGS"
export CFLAGS="$SLKCFLAGS"
export CXXFLAGS="$SLKCFLAGS"
 
make $JOBS install DESTDIR=$PKG || exit 1

# i3lock needs suid to make sure it isn't killed and to read shadow.
# Don't worry, the privileges are dropped really soon after starting
#   and everything else runs as your user.
chmod 4755 $PKG/usr/bin/i3lock

# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Install the manpage
install -Dm644 i3lock.1 $PKG/usr/man/man1/i3lock.1

# Also add the slack-desk file to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Add documentation files: readme, changelog and so on
if [ ! -e $PKG/usr/doc/$PKGNAME-$VERSION ]; then
   mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION || exit 1
fi
cp -a ABOUT-NLS AUTHORS COPYING ChangeLog INSTALL NEWS README TODO $PKG/usr/doc/$PKGNAME-$VERSION

# Also add the slackbuild files to the package
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild
if [ -x $CWD/patches ];then
   mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   cp $CWD/patches/*  $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches/*
fi

# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
echo -e "[\033[01;32m  Create txz package  \033[01;37m] "
echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
sleep 2

# Create txz package
ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"
ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz} " || exit 1
if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

