#!/bin/sh
# Heavily based on the Slackware 14.2 SlackBuild
#
# Created by: Philip van der Hoeven <philip@vd-hoeven.nl>
#
#
# 
# 
# Modified by: Skin Mox <skin-mox@bol.com.br>
#  
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
#
#
# Official Site: https://github.com/philipvdh/slackware-grub2-theme
#

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=slackware-grub2-theme
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-1.0}
ARCH=${ARCH:-$(uname -m)}
JOBS=${JOBS:--j5}
BUILD=${BUILD:-1}
TAG=${TAG:-sm}
SUFFIX=${SUFFIX:-tar.gz}

SOURCE="https://github.com/philipvdh/$PKGNAME/archive/v${VERSION}.${SUFFIX}"
FILE=${PKGNAME}-${VERSION}.${SUFFIX}

TAR=${TAR:-$(basename $SOURCE)}

# Download source tarball if still not present
if [ ! -e $CWD/$FILE ]; then
   wget -c $SOURCE -O "$CWD/$TAR" || exit 1
   mv $TAR $FILE
fi

ARCH=noarch

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT 

echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
echo -e "[\033[01;32m  Decompress the source tarball  \033[01;37m] "
echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
sleep 2

# Decompress the source tarball
cd $TMP
tar xvf $CWD/$FILE || exit 1
cd $PKGNAME-$VERSION || exit 1

echo -e "\E[0;32m#####                              \E[0;0m"
echo -e "\E[0;32m+++++ Start SlackBuild $PKGNAME    \E[0;0m"
echo -e "\E[0;32m#####                              \E[0;0m"

# Apply some patches
#patch -p1 < $CWD/patches/Makefile.patch --verbose || exit 1

echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
echo -e "[\033[01;32m  Building  package  \033[01;37m] "
echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
sleep 2

# Building  package
mkdir -p $PKG/boot/grub/themes/slackware || exit 1
cp -r * $PKG/boot/grub/themes/slackware || exit 1

# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Also add the slack-desk file to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
echo -e "[\033[01;32m  Create txz package  \033[01;37m] "
echo -e "\033[01;32m  \033[01;37m "
echo -e "\033[01;32m  \033[01;37m "
sleep 2

# Create txz package
ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"
ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz} " || exit 1
if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

