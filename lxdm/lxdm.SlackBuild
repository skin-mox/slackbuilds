#!/bin/sh
# Heavily based on the Slackware 14.2 SlackBuild
#
# Created by: Matteo Bernardini <ponce@slackbuilds.org>
#
#
# 
# 
# Modified by: Skin Mox <skin-mox@bol.com.br>
#  
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
#
#
# Official Site: http://lxde.org/
#

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=lxdm
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-0.5.3}
ARCH=${ARCH:-$(uname -m)}
JOBS=${JOBS:--j5}
BUILD=${BUILD:-1}
TAG=${TAG:-sm}

SOURCE="http://downloads.sourceforge.net/lxdm/$PKGNAME-$VERSION.tar.xz"

TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

# Download source tarball if still not present
if [ ! -e $CWD/$TAR ]; then
   wget -c $SOURCE -O "$CWD/$TAR" || exit 1
fi

# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; 
  SLKLDFLAGS="-L/usr/lib64"; 
  LIBDIRSUFFIX="64"; 
  CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT 

# Decompress the source tarball
cd $TMP
tar xvf $CWD/$TAR || exit 1
cd $DIR || exit 1

echo -e "\E[0;32m#####                              \E[0;0m"
echo -e "\E[0;32m+++++ Start SlackBuild $PKGNAME    \E[0;0m"
echo -e "\E[0;32m#####                              \E[0;0m"

# Patch the Xsession file to source /etc/profile and xprofile on session start
patch -p1 < $CWD/patches/source_profile_in_Xsession.diff --verbose || exit 1

# Remove the SuSe section from Xsession file, since it causes Slackware
# to always launch whatever WM/DE that /etc/X11/xinit/xinitrc symlink is
# pointing to, regardless of what the user wants...
patch -p1 < $CWD/patches/remove_suse_from_Xsession.diff --verbose || exit 1

# Set DESKTOP_SESSION in the environment when starting a session
# I'd normally say this is a bad idea, since upstream disagrees with it
# (they say that this should not be populated except when PAM is used),
# but xfce and consolekit devs give me the impression that it's not always
# wrong to start a new ck session even when one is already open (i.e. the
# XDG_SESSION_COOKIE variable is already populated), and besides, since
# both KDM and GDM set DESKTOP_SESSION regardless of whether PAM is used,
# this seems the path of least resistance.  This patch *should* be easy
# to maintain ; let's hope I don't eat those words.  --rworkman
patch -p1 < $CWD/patches/lxdm-set_DESKTOP_SESSION_in_env.diff --verbose || exit 1

sh autogen.sh || true

# Building  package
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
     ./configure \
       --prefix=/usr \
       --libdir=/usr/lib${LIBDIRSUFFIX} \
       --sysconfdir=/etc \
       --localstatedir=/var \
       --mandir=/usr/man \
       --docdir=/usr/doc/$PKGNAME-$VERSION \
       --without-pam \
	   --build=$CHOST-slackware-linux || exit 1
		
make $JOBS 2>&1 | tee build.log || exit 1
make install DESTDIR=$PKG || exit 1

# change default non-existent background image to a newly added one
sed -i -e "s|^bg=.*|bg=/usr/share/wallpapers/stripes-lxdm.jpg|" \
  $PKG/etc/lxdm/lxdm.conf || exit 1
install -m 0644 -D $CWD/stripes-lxdm.jpg $PKG/usr/share/wallpapers/stripes-lxdm.jpg

# Install a to-be-customized-if-needed /etc/lxdm/xinitrc
install -m 0755 -D $CWD/xinitrc $PKG/etc/lxdm/xinitrc || exit 1

# Don't clobber configs on upgrade
# But *do* clobber Xsession
for file in LoginReady PostLogin PostLogout PreLogin PreReboot PreShutdown lxdm.conf xinitrc ; do
  mv $PKG/etc/lxdm/$file $PKG/etc/lxdm/$file.new ;
done

# Look for language defaults were we usually store 'em
cat << "EOF" > $PKG/usr/sbin/lxdm
#!/bin/sh
. /etc/profile.d/lang.sh
export LANG
exec /usr/sbin/lxdm-binary $*
EOF

# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Also add the slack-desk file to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh || exit 1

# Add documentation files: readme, changelog and so on
if [ ! -e $PKG/usr/doc/$PKGNAME-$VERSION ]; then
   mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION || exit 1
fi
cp -a ABOUT-NLS AUTHORS COPYING ChangeLog INSTALL NEWS README TODO $PKG/usr/doc/$PKGNAME-$VERSION

# Also add the slackbuild files to the package
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild
if [ -x $CWD/patches ];then
   mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   cp $CWD/patches/*  $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches/*
fi

# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

# Find and print dependencies into slack-required file
cd $PKG
if [ -x /usr/bin/requiredbuilder ];then
   requiredbuilder -y -v -b -s  $CWD $PKG
fi

# Create txz package
ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"
ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz} " || exit 1
if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

