#!/bin/sh
# Heavily based on the Slackware 14.2 SlackBuild
#
# Created by: Matteo Bernardini <ponce@slackbuilds.org>
#
#
# 
# 
# Modified by: Skin Mox <skin-mox@bol.com.br>
#  
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
#
#
# Official Site: http://www.cdrkit.org/
#

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=cdrkit
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-1.1.11}
ARCH=${ARCH:-$(uname -m)}
JOBS=${JOBS:--j5}
BUILD=${BUILD:-1}
TAG=${TAG:-sm}

SOURCE="http://pkgs.fedoraproject.org/repo/pkgs/$PKGNAME/$PKGNAME-$VERSION.tar.gz/efe08e2f3ca478486037b053acd512e9/$PKGNAME-$VERSION.tar.gz"

TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

# Download source tarball if still not present
if [ ! -e $CWD/$TAR ]; then
   wget -c $SOURCE -O "$CWD/$TAR" || exit 1
fi

# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; 
  SLKLDFLAGS="-L/usr/lib64"; 
  LIBDIRSUFFIX="64"; 
  CHOST="x86_64"
fi

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT 

# Decompress the source tarball
cd $TMP
tar xvf $CWD/$TAR || exit 1
cd $DIR || exit 1

echo -e "\E[0;32m#####                              \E[0;0m"
echo -e "\E[0;32m+++++ Start SlackBuild $PKGNAME    \E[0;0m"
echo -e "\E[0;32m#####                              \E[0;0m"

# Make Makefile prefix
cmake -DCMAKE_INSTALL_PREFIX=/usr || exit 1

# Building  package
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
make $JOBS || exit 1
make install DESTDIR=$PKG || exit 1

( cd $PKG/usr/bin
  #Add cdrecord symlink to wodim (compatibility)
    ln -s wodim cdrecord
  #The author of cdda2wav requested their program be renamed, so...
  #Add cdda2wav symlink to icedax (compatibility)
    ln -s icedax cdda2wav
  #More renaming (due to legal concerns)
  #Add mkisofs symlink to genisoimage (compatibility)
    ln -s genisoimage mkisofs
)

( cd 3rd-party/zisofs_tools
  CFLAGS="$SLKCFLAGS" ./configure
  make )

# Move manpages from /usr/share/man to /usr/man
mv $PKG/usr/share/man $PKG/usr/man/
rm -fR $PKG/usr/share

# Add other useful stuff
install -m 0755 icedax/cdda2mp3 $PKG/usr/bin/cdda2mp3 || exit 1
install -m 0755 3rd-party/zisofs_tools/mkzftree $PKG/usr/bin/mkzftree || exit 1
install -m 0755 3rd-party/geteltorito/geteltorito.pl $PKG/usr/bin/geteltorito || exit 1
install -m 0644 3rd-party/zisofs_tools/mkzftree.1 $PKG/usr/man/man1/mkzftree.1 || exit 1
install -m 0644 3rd-party/geteltorito.1 $PKG/usr/man/man1/geteltorito.1 || exit 1
install -m 0644 -D wodim/wodim.dfl $PKG/etc/wodim.conf || exit 1
install -m 0644 netscsid/netscsid.dfl $PKG/etc/netscsid.conf || exit 1

# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Also add the slack-desk file to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION
cp -a \
  ABOUT COPYING Changelog FAQ FORK INSTALL START TODO VERSION doc/* \
  3rd-party/geteltorito/README.geteltorito \
  $PKG/usr/doc/$PKGNAME-$VERSION
install -m 0644 3rd-party/dirsplit/README \
  $PKG/usr/doc/$PKGNAME-$VERSION/README.dirsplit
  
# Also add the slackbuild files to the package
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild
if [ -x $CWD/patches ];then
   mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   cp $CWD/patches/*  $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches/*
fi

# Find and print dependencies into slack-required file
cd $PKG
if [ -x /usr/bin/requiredbuilder ];then
   requiredbuilder -y -v -b -s  $CWD $PKG
fi

# Create txz package
ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"
ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz} " || exit 1
if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

