#!/bin/sh
# Heavily based on the Slackware 14.2 SlackBuild
#
# Created by: Audrius Ka≈æukauskas <audrius@neutrino.lt>
#
#
# 
# 
# Modified by: Skin Mox <skin-mox@bol.com.br>
#  
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
# 
#
#
# Official Site: https://www.python.org/
#

# Set variables:
CWD=`pwd`
OUTPUT=${OUTPUT:-$CWD}
PKGNAME=python3
TMP=${TMP:-/tmp/txz/$PKGNAME}
PKG=$TMP/package
VERSION=${VERSION:-3.5.2}
ARCH=${ARCH:-$(uname -m)}
JOBS=${JOBS:--j5}
BUILD=${BUILD:-1}
TAG=${TAG:-sm}

SOURCE="https://www.python.org/ftp/python/${VERSION}/Python-${VERSION}.tar.xz"

TAR=${TAR:-$(basename $SOURCE)}
DIR=${DIR:-$(echo "$TAR"|sed -r 's/(\.tar|)(.gz|.bz2|.xz|.tgz|)$//')}

# Download source tarball if still not present
if [ ! -e $CWD/$TAR ]; then
   wget -c $SOURCE -O "$CWD/$TAR" || exit 1
fi

# Set compiling FLAGS
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i486"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"; 
  SLKLDFLAGS=""; 
  LIBDIRSUFFIX=""; 
  CHOST="i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"; 
  SLKLDFLAGS="-L/usr/lib64"; 
  LIBDIRSUFFIX="64"; 
  CHOST="x86_64"
fi

PYVER=$(cut -d. -f1,2 <<< "$VERSION")

# Location for Python site-packages.
SITEPK=$PKG/usr/lib${LIBDIRSUFFIX}/python${PYVER}/site-packages
# Same as above without $PKG.
TOOLSDIR=/usr/lib${LIBDIRSUFFIX}/python${PYVER}/site-packages

# Create building directory
rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT 

# Decompress the source tarball
cd $TMP
tar xvf $CWD/$TAR || exit 1
cd Python-$VERSION || exit 1

echo -e "\E[0;32m#####                              \E[0;0m"
echo -e "\E[0;32m+++++ Start SlackBuild $PKGNAME    \E[0;0m"
echo -e "\E[0;32m#####                              \E[0;0m"

# Apply some patches
patch -p1 < $CWD/patches/python3.readline.set_pre_input_hook.diff --verbose || exit 1
# We don't want a large libpython*.a.
patch -p1 < $CWD/patches/python3.no-static-library.diff --verbose || exit 1
if [ "$ARCH" = "x86_64" ]; then
  # Install to lib64 instead of lib.
  patch -p1 < $CWD/patches/python3.x86_64.diff --verbose || exit 1
fi

# Fix python3 path in cgi.py.
sed -i '1s|^#.*/usr/local/bin/python|#!/usr/bin/python3|' Lib/cgi.py || exit 1
# If this system already has Python3 with pip in site-packages, ignore it and
# install pip anyway.
sed -i 's|\("install",\)|\1 "--ignore-installed",|' Lib/ensurepip/__init__.py || exit 1


# Building  package
LDFLAGS="$SLKLDFLAGS" \
CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
     ./configure \
        --prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--docdir=/usr/doc/$PKGNAME-$VERSION \
		--with-threads \
        --enable-ipv6 \
        --enable-shared \
        --with-system-expat \
        --with-system-ffi \
		--build=$CHOST-slackware-linux || exit 1
		
make $JOBS 2>&1 | tee build.log || exit 1
make install DESTDIR=$PKG || exit 1

# Restore original ensurepip behaviour.
sed -i 's|\("install",\) "--ignore-installed",|\1|' \
  $PKG/usr/lib${LIBDIRSUFFIX}/python${PYVER}/ensurepip/__init__.py || exit 1

# Remove to avoid overwriting a copy from Python2.
rm -f $PKG/usr/bin/2to3 || exit 1

# We'll install the python-tools under site-packages.
mkdir -p $SITEPK
cp -a Tools/* $SITEPK || exit 1

# Remove DOS batch/exe files.
find $PKG \( -name '*.exe' -o -name '*.bat' \) -exec rm -f '{}' \; || exit 1

# Fix permissions on dynamic libraries.
find $PKG -type f -perm 555 -exec chmod 755 '{}' \; || exit 1

# Strip binaries and shared objects, if present
( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

# Also add the slack-desk file to the package
mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

# Install docs.
mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a README LICENSE Misc $PKG/usr/doc/$PRGNAM-$VERSION
mv $SITEPK/README $PKG/usr/doc/$PRGNAM-$VERSION/README.python-tools
( cd $PKG/usr/doc/$PRGNAM-$VERSION ; ln -sf $TOOLSDIR Tools )
if [ -e "$CWD/python-$VERSION-docs-html.tar.bz2" ]; then
  tar xf $CWD/python-$VERSION-docs-html.tar.bz2
  mv python-$VERSION-docs-html $PKG/usr/doc/$PRGNAM-$VERSION/html
  chown -R root:root $PKG/usr/doc/$PRGNAM-$VERSION/html
fi

# Also add the slackbuild files to the package
mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild
cat $CWD/slack-desc > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/slack-desc
cat $CWD/$PKGNAME.SlackBuild > $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/$PKGNAME.SlackBuild
if [ -x $CWD/patches ];then
   mkdir -p $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   cp $CWD/patches/*  $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches
   chmod 644 $PKG/usr/doc/$PKGNAME-$VERSION/SlackBuild/patches/*
fi

# Compress the man pages if present
if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

# Find and print dependencies into slack-required file
cd $PKG
if [ -x /usr/bin/requiredbuilder ];then
   requiredbuilder -y -v -b -s  $CWD $PKG
fi

# Create txz package
ROOTCOMMANDS="set -o errexit -o xtrace ; cd ${PKG} ;
  /bin/chown --recursive root:root .  ;"
ROOTCOMMANDS="${ROOTCOMMANDS}
  /sbin/makepkg --linkadd y --chown n $OUTPUT/$PKGNAME-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz} " || exit 1
if test ${UID} = 0; then
  eval ${ROOTCOMMANDS}
  set +o xtrace
elif test "$(type -t fakeroot)" = 'file'; then
  echo -e "\e[1mEntering fakeroot environment.\e[0m"
  echo ${ROOTCOMMANDS} | fakeroot
else
  echo -e "\e[1mPlease enter your root password.\e[0m (Consider installing fakeroot.)"
  /bin/su -c "${ROOTCOMMANDS}"
fi

# Cleanup if enabled
if [ "$1" = "--cleanup" ]; then
 rm -rf $TMP
fi

